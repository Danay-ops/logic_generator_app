def utterance_time(string_time):
    """Функция обработки распознавания времени и возврат его значения """
    global TIME
    global DAY
    our_day = datetime.datetime.fromisoformat(str(DAY))
    regexp_digit_time = re.compile('(\d+)')

    regexp_time_1st = re.compile('(^|\s)(|по)(|\s)поз(д|ж)(е|нее|а|но)($|\s)')
    regexp_time_morning = re.compile(
        '(^|\s)((|c|(с\s)|(сам(ого|ым)\s))утр(а|о|ом|ецом|еца|ечко|ечком))|(сам(о|ое|ая)\sран(не|е|нее|о))($|\s)')
    regexp_time_2nd = re.compile('(^|\s)((обед)(|а|у|ы|e))|(дн(е|ё)м)($|\s)')
    regexp_time_3rd = re.compile('(^|\s)((вечер)(|оч)(|к)(|ом|а|у))($|\s)')
    regexp_time_4th = re.compile(
        'пол(|(овин(|а|е)))\s?((\d{1,2})|перв|втор|треть|четвер|пят|шест|седьм|восьм|девят|десят|одиннадц|двенадц)')
    regexp_time_5th = re.compile('(^|\s+)(((в|на|к|после)\s+)(\d{1,2})\s+(\d{1,2})(\s+(\d{1,2}))?)($|\s+)')
    regexp_time_6th = re.compile('(^|\s)(через|мин.*|час.*)?\s(через\s|мин.*\s|час.*\s)?(.*)')
    regexp_time_7th = re.compile('((перв|втор)(ая|ой)|2)\sполовин(а|е)')
    regexp_time_8th = re.compile('(^|\s+)(((в|на|к|после)?\s+)?(\d{1,2})|час)($|\s+)')
    regexp_time_10th = re.compile('(^|\s)посл.*раб.*')

    try:
        if re.search(regexp_time_1st, string_time) is not None:
            # функция для обработки паттерна: попозже
            time = TIME
            convert_time = datetime.time.fromisoformat(time)
            our_datetime = datetime.datetime.combine(our_day, convert_time) + datetime.timedelta(
                hours=3)
            our_time = our_datetime.time().strftime('%H:%M')
            return our_time

        elif re.search(regexp_time_morning, string_time) is not None:
            # функция для обработки паттерна: с утра
            time = '07:00'
            return time

        elif re.search(regexp_time_2nd, string_time) is not None:
            # функция для обработки паттерна: в обед
            time = '12:00'
            return time

        elif re.search(regexp_time_3rd, string_time) is not None:
            # функция для обработки паттерна: вечером
            time = '19:00'
            return time

        elif re.search(regexp_time_4th, string_time) is not None:
            # функция для обработки паттерна "пол ... часа"
            compile_hours = {0: "12:30", 1: "13:30", 2: "14:30", 3: '15:30', 4: "16:30", 5: "17:30", 6: "18:30",
                             7: "19:30"}
            compile_hours_text = {"перв": "12:30", "втор": "13:30", "треть": "14:30", 'четвер': '15:30',
                                  "пят": "16:30", "шест": "17:30", "седьм": "18:30",
                                  "восьм": "19:30", "девят": "08:30",
                                  "десят": "09:30", 'одиннадц': '10:30', 'двенадц': '11:30', 'полперв': '12:30',
                                  'полвтор': '13:30', 'полтреть': '14:30', 'полчетвер': '15:30', 'полпят': '16:30',
                                  'полшест': '17:30', 'полседьм': '18:30',
                                  'полвосьм': '19:30', 'полдевят': '08:30', 'полдесят': "09:30", 'полодиннадц': "10:30",
                                  "полдвенадц": "11:30"}
            match_time = re.search(regexp_time_4th, string_time).group(0)
            if re.search(regexp_digit_time, match_time) is not None:
                match_digit = re.search(regexp_digit_time, match_time).group(0)
                hour = int(match_digit) - 1
                for key, value in compile_hours.items():
                    if hour == key:
                        our_time = value
                        return our_time
                our_time = datetime.time(hour, 30).strftime("%H:%M")
                return our_time
            else:
                for key, value in compile_hours_text.items():
                    if key in match_time:
                        our_time = value
                        return our_time

        elif re.search(regexp_time_5th, string_time) is not None:
            # функция для обработки паттерна: в число число
            match_time = re.search(regexp_time_5th, string_time).group(0)
            match_digits = re.findall(regexp_digit_time, match_time)
            for i in range(len(match_digits)):
                if match_digits[i] == '0':
                    match_digits[i] = '00'
            our_time = match_digits[0] + ':' + match_digits[1]
            return our_time


        elif re.search(regexp_time_6th,
                       string_time) is not None and 'дн' not in string_time and 'недел' not in string_time and 'через' in string_time:
            # функция для обработки паттерна: через ... (мин|час)
            match_obj = re.search(regexp_time_6th, string_time).group(0)
            if 'мин' in match_obj:
                if re.search(regexp_digit_time, string_time):
                    minute = str(re.search(regexp_digit_time, string_time).group())
                    minute_to_str = '0' + minute if int(minute) // 10 == 0 else minute
                    return f'00:{minute_to_str}'
                else:
                    compile_mins_text = {"неск": "00:07", "пару": "00:02", "пять": "00:05", "десят": "00:10",
                                         "пятнад": "00:15", "двадц": "00:20"}
                    for item in compile_mins_text.keys():
                        if item in match_obj:
                            result_time = compile_mins_text[item]
                            return result_time
            else:
                compile_hours_text = {"неск": "03:00", "полт": "01:30", "пол": "00:30", "пару": "02:00", "два": "02:00",
                                      "три": "03:00",
                                      "чет": "04:00", "пят": "05:00", "шес": "00:10", "2": "02:00", "3": "03:00",
                                      "4": "04:00", "5": "05:00", "6": "06:00", "20": "00:20", "час": "01:00"}
                for item in compile_hours_text:
                    if item in match_obj:
                        result_time = compile_hours_text[item]
                        return result_time

        elif re.search(regexp_time_7th, string_time) is not None:
            # функция для обработки паттерна: (перв|втор) половина дня
            our_time = '15:00'
            return our_time

        elif re.search(regexp_time_8th, string_time) is not None and 'дн' not in string_time:
            # функция для обработки паттерна: в ... часов.(любое число по умолчанию попадает в эту функцию)
            match_time = re.search(regexp_time_8th, string_time).group(0)
            match_hour = re.search(regexp_time_8th, string_time).group(2)
            if "час" in match_hour:
                return "13:00"
            else:
                match_digit = re.search(regexp_digit_time, match_time).group(0)
                hour = int(match_digit)
                compile_hours = {1: "13:00", 2: "14:00", 3: '15:00', 4: "16:00", 5: "17:00", 6: "18:00", 7: "19:00",
                                 8: "08:00",
                                 9: "09:00", 10: "10:00"}
                for key, value in compile_hours.items():
                    if key == hour:
                        our_time = value
                        return our_time
                our_time = datetime.time(hour, 0).strftime("%H:%M")
                return our_time

        elif re.search(regexp_time_10th, string_time):
            # функция для обработки паттерна: после работы
            return '19:00'

        else:
            nn.log('не удалось распознать время пользователя')
            return 'error'
    except ValueError:
        return 'error'