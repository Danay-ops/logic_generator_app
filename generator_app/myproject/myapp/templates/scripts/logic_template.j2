{%- set regular = entity[0].replace('<', '').replace('>', '') %}
{%- if 'NULL' in regular   %}
    if not r:
            nn.log('NULL')
    {{- set_status }}
{%- elif 'DEFAULT' in regular %}
    if not r.has_entities():
            nn.log('DEFAULT')
{{- set_status }}
{%- else %}
{%- if entity|length > 1 %}
{%- set condition_parts = entity[1].split() %}
{%- set has_and_logic_operator = 'and' in condition_parts or 'AND' in condition_parts or '&&' in condition_parts or '&' in condition_parts%}
{%- set has_or_logic_operator = 'OR' in condition_parts or 'or' in condition_parts %}
{%- endif %}
{%- if has_and_logic_operator %}
    if r.has_entity('{{ regular }}') and r.has_entity('{{ entity[-2].split()[-1] }}'):
        if r.entity('{{ regular }}') == '{{ entity[1].split()[0] }}' and r.entity('{{ entity[-2].split()[-1] }}') == '{{ entity[-1] }}':
            nn.log('condition', '{{regular}}={{entity[1].split()[0]}} and {{entity[-2].split()[-1]}}={{entity[-1]}}')
            {%- if 'time_to_parse' in regular or 'time_to_parse' in entity[-2].split()[-1] %}
            nn.env('said_time', utterance_time(r.utterance()))
            {%- endif %}
    {{- set_status }}
{%- elif has_or_logic_operator %}
    if r.has_entity('{{ regular }}') or r.has_entity('{{ entity[-2].split()[-1] }}'):
        if r.entity('{{ regular }}') == '{{ entity[1].split()[0] }}' or r.entity('{{ entity[-2].split()[-1] }}') == '{{ entity[-1] }}':
            nn.log('condition', '{{regular}}={{entity[1].split()[0]}} or {{entity[-2].split()[-1]}}={{entity[-1]}}')
    {{- set_status }}
{%- else %}
    if r.has_entity('{{ regular }}'):
        if r.entity('{{ regular }}') == '{{ entity[1] }}':
            nn.log('condition', '{{regular}}={{entity[1]}}')
    {{- set_status }}
            {%- if 'time_to_parse' in regular %}
            nn.env('said_time', utterance_time(r.utterance()))
            {%- endif %}
{%- endif %}
{%- endif %}
        {%- if 'parse_sum' in regular %}
            #ну нахер это парсинг суммы
            pass
        {%- elif 'parse_date' in regular %}
            #ну нахер это парсинг даты
            said_date = utterance_date(r.utterance())
        {%- else %}
            {%- if test == True %}
            {{- template1 }}
            {%- else %}
            {%- if goto.get('goto') %}
            {%- if goto['goto'][0][0].replace("'", "").split("_")[0].split()|length > 1 %}
                
            {%- else %}
                
            {%- endif %}
            nn.counter('{{ unit_name }}_{{ regular }}', '+')

            {%- for idx in range(goto['goto'] | length) %}
            if nn.counter('{{ unit_name }}_{{ regular }}') == {{ idx + 1 }}:
                return {{ unit_name }}_speaker({{ goto["goto"][idx] | join(", ") | trim }})
            {%- endfor %}
            {%- endif %}  {# Закрытие первого if #}

            {%- if goto.get('speaker') and goto['speaker']|length > 1 %}
            {%- if 'сброс' in goto['speaker'][0] or 'Сброс' in goto['speaker'][0] or 'Прекращение'  in goto['speaker'][0] %}
            return nv.hangup()
            {%- else %}
            return {{ goto['speaker'][0] | trim }}_speaker({{ goto['speaker'][1] | trim }})
            {%- endif %}
        {%- endif %}  {# Закрытие второго if #}
        {%- endif %}
        {%- endif %}
